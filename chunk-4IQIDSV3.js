import{b as p}from"./chunk-SFDQLEGM.js";import{$a as f,Ja as u,Ta as y,Ua as l,Za as v,_a as g,ab as h,bb as E,cb as b,fb as T,j as m,m as c}from"./chunk-557QPNVO.js";import{g as d}from"./chunk-ENRHZQ2S.js";var a=class{name="";payload;listeners=[];constructor(e){this.payload=e}addListener(e){this.listeners.push(e)}removeListener(e){let t=this.listeners.indexOf(e);t!==-1&&this.listeners.splice(t,1)}notifyListeners(){for(let e of this.listeners)e(this.payload)}};var C=class extends a{name="CustomerKeyAssignedEvent";constructor(e){super(e)}},I=class extends a{name="CustomerKeyRetryClearEvent";constructor(e){super(e)}},x=class extends a{name="CustomerKeyLostEvent";constructor(e){super(e)}},K=class extends a{name="CustomerKeyReassignedEvent";constructor(e){super(e)}};var P=class s{events=new Map;registerEventListener(e,t){this.events.has(e)||this.events.set(e,[]),this.events.get(e)?.push(t)}unregisterEventListener(e,t){let r=this.events.get(e);if(r&&r.length>0){for(let o=0;o<r.length;o++)if(r[o]===t){r.splice(o,1);break}}}fireEvent(e){let t=e.constructor,r=this.events.get(t);if(r&&r.length>0)for(let o of r)o(e.payload)}static \u0275fac=function(t){return new(t||s)};static \u0275prov=m({token:s,factory:s.\u0275fac,providedIn:"root"})};var O={customerId:"custom_id",traceDate:"trace_date",sequenceNumber:"seq",status:"status",branchCode:"branch_cd",serialNumber:"serial_num",otpKey:"otp_key"},n=class extends u{customerId="";traceDate=new p;sequenceNumber=0;status=1;branchCode="";serialNumber="";otpKey="";constructor(){super(),this._mapper=new f(O)}getPrimaryKeyName(){return"customerId"}getSoftDelete(){}setTraceDate(e){this.traceDate=new p(e)}setStatus(e){this.status=Number(e)}};d([E("seq"),b()],n.prototype,"sequenceNumber",2),n=d([h("cifhst")],n);var D=class s extends g{constructor(e){super(e,n)}getName(){return"serialkeyhistory"}createLog(e,t,r,o,L){let i=new n;if(i.branchCode=t.branchCode,i.customerId=t.customerId,i.otpKey=L,r===1)i.serialNumber=o;else{let R=v(o,!1);i.serialNumber=R.sequenceNumber+""}i.status=e,i.traceDate=new p;let N=this.getQueryBuilder().insert(i).buildParameterized();return this.http.post(y.api,l(N)).then()}logKeyAssign(e,t,r,o){return this.createLog(1,e,t,r,o)}logKeyReAssign(e,t,r,o){return this.createLog(4,e,t,r,o)}logKeyLost(e,t,r,o){return this.createLog(3,e,t,r,o)}logKeyRetryClear(e,t,r,o){return this.createLog(2,e,t,r,o)}static \u0275fac=function(t){return new(t||s)(c(T))};static \u0275prov=m({token:s,factory:s.\u0275fac,providedIn:"root"})};export{C as a,I as b,x as c,K as d,P as e,D as f};
