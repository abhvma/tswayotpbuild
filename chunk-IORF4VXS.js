import{b as m}from"./chunk-CQZ4ATFG.js";import{Ja as y,Ta as l,Va as g,_a as v,ab as f,bb as h,cb as E,db as b,eb as T,hb as I,j as c,m as u}from"./chunk-3IBPSVRT.js";import{g as d}from"./chunk-ENRHZQ2S.js";var p=class{name="";payload;listeners=[];constructor(e){this.payload=e}addListener(e){this.listeners.push(e)}removeListener(e){let t=this.listeners.indexOf(e);t!==-1&&this.listeners.splice(t,1)}notifyListeners(){for(let e of this.listeners)e(this.payload)}};var C=class extends p{name="CustomerKeyAssignedEvent";constructor(e){super(e)}},x=class extends p{name="CustomerKeyRetryClearEvent";constructor(e){super(e)}},K=class extends p{name="CustomerKeyLostEvent";constructor(e){super(e)}},P=class extends p{name="CustomerKeyReassignedEvent";constructor(e){super(e)}};var D=class o{events=new Map;registerEventListener(e,t){this.events.has(e)||this.events.set(e,[]),this.events.get(e)?.push(t)}unregisterEventListener(e,t){let r=this.events.get(e);if(r&&r.length>0){for(let s=0;s<r.length;s++)if(r[s]===t){r.splice(s,1);break}}}fireEvent(e){let t=e.constructor,r=this.events.get(t);if(r&&r.length>0)for(let s of r)s(e.payload)}static \u0275fac=function(t){return new(t||o)};static \u0275prov=c({token:o,factory:o.\u0275fac,providedIn:"root"})};var q={customerId:"custom_id",traceDate:"trace_date",sequenceNumber:"seq",status:"status",branchCode:"branch_cd",serialNumber:"serial_num",otpKey:"otp_key"},a=class extends y{customerId="";traceDate=new m;sequenceNumber=0;status=1;branchCode="";serialNumber="";otpKey="";constructor(){super(),this._mapper=new h(q)}getPrimaryKeyName(){return"customerId"}getSoftDelete(){}setTraceDate(e){this.traceDate=new m(e)}setStatus(e){this.status=Number(e)}};d([b("seq"),T()],a.prototype,"sequenceNumber",2),a=d([E("cifhst")],a);var L=class o extends f{constructor(e){super(e,a)}getName(){return"serialkeyhistory"}createLog(e,t,r,s,i,N){let n=new a;if(n.customerId=t.customerId,n.otpKey=i,n.branchCode=N,r===1)n.serialNumber=s;else{let w=v(s,!1);n.serialNumber=w.sequenceNumber+""}n.status=e,n.traceDate=new m;let R=this.getQueryBuilder().insert(n).buildParameterized();return this.http.post(l.api,g(R)).then()}logKeyAssign(e,t,r,s,i){return this.createLog(1,e,t,r,s,i)}logKeyReAssign(e,t,r,s,i){return this.createLog(4,e,t,r,s,i)}logKeyLost(e,t,r,s,i){return this.createLog(3,e,t,r,s,i)}logKeyRetryClear(e,t,r,s,i){return this.createLog(2,e,t,r,s,i)}static \u0275fac=function(t){return new(t||o)(u(I))};static \u0275prov=c({token:o,factory:o.\u0275fac,providedIn:"root"})};export{C as a,x as b,K as c,P as d,D as e,L as f};
