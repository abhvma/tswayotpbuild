import{b as n}from"./chunk-AQHU5BUJ.js";import{$a as f,Ja as u,Ta as g,Ua as d,Za as y,_a as l,ab as b,bb as h,cb as v,fb as I,j as p,m as c}from"./chunk-N56VVWT6.js";import{g as m}from"./chunk-ENRHZQ2S.js";var N={customerId:"custom_id",traceDate:"trace_date",sequenceNumber:"seq",status:"status",branchCode:"branch_cd",serialNumber:"serial_num",otpKey:"otp_key"},s=class extends u{customerId="";traceDate=new n;sequenceNumber=0;status=1;branchCode="";serialNumber="";otpKey="";constructor(){super(),this._mapper=new f(N)}getPrimaryKeyName(){return"customerId"}getSoftDelete(){}setTraceDate(e){this.traceDate=new n(e)}};m([h("seq"),v()],s.prototype,"sequenceNumber",2),s=m([b("cifhst")],s);var C=class a extends l{constructor(e){super(e,s)}getName(){return"serialkeyhistory"}createLog(e,t,i,r,D){let o=new s;if(o.branchCode=t.branchCode,o.customerId=t.customerId,o.otpKey=D,i===1)o.serialNumber=r;else{let T=y(r);o.serialNumber=T.sequenceNumber+""}o.status=e,o.traceDate=new n;let K=this.getQueryBuilder().insert(o).buildParameterized();return this.http.post(g.api,d(K)).then()}logKeyAssign(e,t,i,r){return this.createLog(1,e,t,i,r)}logKeyReAssign(e,t,i,r){return this.createLog(4,e,t,i,r)}logKeyLost(e,t,i,r){return this.createLog(3,e,t,i,r)}logKeyRetryClear(e,t,i,r){return this.createLog(2,e,t,i,r)}static \u0275fac=function(t){return new(t||a)(c(I))};static \u0275prov=p({token:a,factory:a.\u0275fac,providedIn:"root"})};export{C as a};
